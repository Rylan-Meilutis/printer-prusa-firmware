diff --git a/src/gui/dialogs/DialogConnectReg.cpp b/src/gui/dialogs/DialogConnectReg.cpp
index edd9a1be1..8933d59d1 100644
--- a/src/gui/dialogs/DialogConnectReg.cpp
+++ b/src/gui/dialogs/DialogConnectReg.cpp
@@ -39,11 +39,11 @@ DialogConnectRegister::DialogConnectRegister()
     text_detail.SetAlignment(Align_t::Center());
     line.SetBackColor(COLOR_ORANGE);
 
-    title.SetText(_("Prusa Connect - printer setup"));
+    title.SetText(_("Simplyprint - printer setup"));
 
     last_seen_status = std::make_tuple(connect_client::ConnectionStatus::Unknown, connect_client::OnlineError::NoError, std::nullopt);
 
-    text_state.SetText(_("Registering the printer to Prusa Connect..."));
+    text_state.SetText(_("Registering the printer to Simplyprint."));
     text_attempt.Hide();
 
     // Show these only after we get the code.
@@ -82,7 +82,7 @@ void DialogConnectRegister::windowEvent(window_t *sender, GUI_event_t event, voi
         switch (get<0>(last_seen_status)) {
         case ConnectionStatus::RegistrationRequesting:
         case ConnectionStatus::RegistrationCode:
-            close = MsgBoxWarning(_("Prusa Connect setup is not finished. Do you want to exit and abort the process?"), Responses_YesNo)
+            close = MsgBoxWarning(_("Simplyprint setup is not finished. Do you want to exit and abort the process?"), Responses_YesNo)
                 == Response::Yes;
             break;
         default:
@@ -111,7 +111,7 @@ void DialogConnectRegister::windowEvent(window_t *sender, GUI_event_t event, voi
                 // therefore the wizard is of little use to them.
 
                 ArrayStringBuilder<max_url_len> url_sb;
-                url_sb.append_string("https://connect.prusa3d.com/add/");
+                url_sb.append_string("https://Simplyprint.io/add/");
                 url_sb.append_string(code);
                 qr.SetText(url_sb.str());
                 showQR();
@@ -129,16 +129,16 @@ void DialogConnectRegister::windowEvent(window_t *sender, GUI_event_t event, voi
                 }
 
 #if HAS_MINI_DISPLAY()
-                text_state.SetText(_("Scan the QR code using the Prusa app or camera, or visit prusa.io/add.\n"));
+                text_state.SetText(_("Scan the QR code using the Simplyprint app or camera, or visit Simplyprint.io/add.\n"));
 #else
-                text_state.SetText(_("1. Scan the QR code using the Prusa app or camera, or visit prusa.io/add\n\n2. Log in"));
+                text_state.SetText(_("1. Scan the QR code using the Simplyprint app or camera, or visit Simplyprint.io/add\n\n2. Log in"));
 #endif
                 break;
                 ;
             }
             case ConnectionStatus::RegistrationDone: {
                 hideDetails();
-                text_state.SetText(_("Registration successful, continue at connect.prusa3d.com"));
+                text_state.SetText(_("Registration successful, continue at Simplyprint.io"));
                 connect_client::leave_registration();
                 left_registration = true;
                 break;
@@ -184,7 +184,7 @@ void DialogConnectRegister::windowEvent(window_t *sender, GUI_event_t event, voi
                 text_state.SetText(string_view_utf8::MakeRAM((const uint8_t *)error_buffer));
                 text_state.Invalidate();
 
-                snprintf(url_buffer, sizeof(url_buffer), "prusa.io/%d", static_cast<int>(error.err_code));
+                snprintf(url_buffer, sizeof(url_buffer), "Simplyprint.io/%d", static_cast<int>(error.err_code));
                 qr.SetText(url_buffer);
                 showQR();
 
@@ -288,7 +288,7 @@ constexpr Rect16 DialogConnectRegister::Positioner::textRect(int16_t add_top, ui
     return Rect16 { WizardDefaults::col_0, static_cast<int16_t>(WizardDefaults::row_0 + add_top), width, height };
 }
 
-/** @returns Rect16 for title (prusaConnect)*/
+/** @returns Rect16 for title (Simplyprint)*/
 constexpr Rect16 DialogConnectRegister::Positioner::textRectTitle() {
 #if !HAS_MINI_DISPLAY()
     return textRect();
